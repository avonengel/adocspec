<?xml version="1.0" encoding="UTF-8"?><specdocument><specobjects doctype="dsn"><specobject><id>filtering-by-artifact-types-during-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>185</sourceline><description>When OFT is configured to restrict inclusion to one or more artifact
types the specification list builder
imports the following elements only if they match at least one of the
configured types:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:include-only-artifact-types</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>filtering-by-tags-during-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>206</sourceline><description>The specification list builder can be
configured to import a specification item only if at least one of its
tags is contained in the configured set of tags.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:include-items-where-at-least-on-tag-matches</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>filtering-by-tags-or-no-tags-during-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>220</sourceline><description>The specification list builder can be
configured to import a specification item only if it either has no tags
or at least one of its tags is contained in the configured set of tags.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:include-items-that-do-not-have-tags-or-where-at-least-one-tag-matches</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.needed-coverage-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>236</sourceline><description>The linker component iterates over all needed artifact
types of all specification items and determines if and which coverage
exists for each.</description><comment>Note that the linker only takes care of swallow coverage.
Deep coverage is determined by the
tracer component.</comment><needscoverage><needsobj>utest</needsobj><needsobj>impl</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.outgoing-coverage-link-status</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.outgoing-coverage-link-status</id><status>approved</status><version>3</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>254</sourceline><description>The linker component determines the coverage status of the
outgoing link between the provider item and the requester item.

The possible results are:</description><needscoverage><needsobj>utest</needsobj><needsobj>impl</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.outgoing-coverage-link-status</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.incoming-coverage-link-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>280</sourceline><description>The linker component determines the coverage status of the
incoming link between the requester item and the provider item.

The possible results are:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.incoming-coverage-link-status</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.deep-coverage</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>304</sourceline><description>The Linked Specification Item declares
itself covered deeply if this item - and all items it needs coverage
from - are covered recursively.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.deep-coverage</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.tracing.duplicate-items</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>318</sourceline><description>The tracer marks a specification
item as a duplicate if other items with an identical
specification item ID exist.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.duplicate-items</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.defect-items</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>332</sourceline><description>The tracer marks a specification
item as defect if the following criteria apply to the item

has duplicates
or (not rejected
    and (any outgoing coverage link has a different status than "Covers"
         or not covered deeply
        )
   )</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.defect-items</linksto><dstversion>2</dstversion></provcov></providescoverage></specobject><specobject><id>tracing.link-cycle</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>354</sourceline><description>The tracer detects cycles in links between
Linked Specification Items.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:tracing.link-cycle</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.plain-text.summary</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>371</sourceline><description>The summary in the plain text report includes:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.plain-text.summary</linksto><dstversion>2</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.plain-text.specification-item-overview</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>387</sourceline><description>An item summary consist in the plain text report includes</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.plain-text.specification-item-overview</linksto><dstversion>2</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.plain-text.link-details</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>410</sourceline><description>The link detail section shows for all links of a specification item:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.plain-text.link-details</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.plain-text.specification-item-origin</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>427</sourceline><description>If enabled, the plain text report shows the origin of a specification
item</description><rationale>This format is recognized by most IDEs and automatically turned into a
link in the IDE’s console.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.requirement-origin</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.plain-text.linked-specification-item-origin</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>447</sourceline><description>If enabled, the links in the plain text report show the origin of a
specification item</description><rationale>This format is recognized by most IDEs and automatically turned into a
link in the IDE’s console.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.requirement-origin</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.html.inline_css</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>469</sourceline><description>OFT inlines the cascading style sheet (CSS) into the HTML report.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.html.single_file</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>conversion.reqm2-export</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>483</sourceline><description>OFT exports to ReqM2’s ``SpecObject'' format.</description><comment>The ReqM2 format is specified in the ReqM2 handbook by
Elektrobit.</comment><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:conversion.reqm2-export</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.html.specification-item-origin</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>498</sourceline><description>If enabled, the HTML report shows the origin of a specification item as
an HTML link pointing to the source.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.requirement-origin</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reporting.html.linked-specification-item-origin</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>511</sourceline><description>If enabled, the links in the plain text report show the origin of a
specification item as an HTML link pointing to the source.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:reporting.requirement-origin</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>specification-item</id><status>approved</status><version>3</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>532</sourceline><description>A SpecificationItem consists of the following parts:</description><comment>See req~forwarding_needed_coverage~1 for an explanation of the
``forwards'' fields meaning.</comment><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:specification-item</linksto><dstversion>2</dstversion></provcov><provcov><linksto>req:forwarding_needed_coverage</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>linked-specification-item</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>563</sourceline><description>A LinkedSpecificationItem is a container for a
SpecificationItem that is enriched with
references to other `LinkedSpecificationItem`s.</description><rationale>This allows navigating between specification items.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:specification-item</linksto><dstversion>2</dstversion></provcov></providescoverage></specobject><specobject><id>specification-item-id</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>579</sourceline><description>A SpecificationItemId consists of:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:specification-item</linksto><dstversion>2</dstversion></provcov></providescoverage></specobject><specobject><id>md.specification-item-id-format</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>597</sourceline><description>A requirement ID has the following format

requirement-id = type "~" id "~" revision

type = 1*ALPHA

id = id-fragment *("." id-fragment)

id-fragment = ALPHA *(ALPHA / DIGIT / "_" / "-")

revision = 1*DIGIT</description><rationale>The ID must only contain characters that can be used in URIs without
quoting. This makes linking in formats like Markdown or HTML clean and
easy. Requirement type and revision must be immediately recognizable
from the requirement ID. The built-in revision number makes links break
if a requirement is updated - a desired behavior.</rationale><comment>Note that the artifact type is integral part of the ID. That means that
dsn~my-requirement~1 is something completely different then
utest~my-requirement~1. One of the benefits of making the artifact
type mandatory part of the ID is that this allows for typical coverage
chains like.

req~my-requirement~2 -&amp;gt; dsn~my-requirement~4 -&amp;gt; impl~my-requirement~4

Otherwise users would be forced to invent different names for each link
in the chain.</comment><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.specification-item-title</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>645</sourceline><description>If a Markdown title directly precedes a specification item ID, then the
Markdown title is used as title for the specification item.</description><rationale>Markdown titles show up in the outline and are a natural way of defining
a requirement title.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov><provcov><linksto>req:markdown-outline-readable</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.requirement-references</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>664</sourceline><description>In Markdown specification item references have the following format:

reference = (plain-reference / url-style-link)

plain-reference = requirement-id

url-style-link = "[" link-text "]" "(" "#" requirement-id ")"</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.covers-list</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>684</sourceline><description>The Markdown Importer supports the following format for links that cover
a different specification item.

covers-list = covers-header 1*(LINEBREAK covers-line)

covers-header = "Covers:" *WSP

covers-line = *WSP "*" *WSP reference

Only one traced reference per line is supported. Any optional text after
the reference is ignored if it is separated by at least one whitespace
character</description><rationale>Defining a link should be as natural and simple as possible in Markdown.
It must also be rendered correctly by a regular Markdown renderer
without modifications. Embedding links in lists to define the
relationship looks nice and is language independent.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.depends-list</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>716</sourceline><description>The Markdown Importer supports the following format for links to a
different specification item which the current depends on.

depends-list = depends-header 1*(LINEBREAK depends-line)

depends-header = "Depends:" *WSP

depends-line = *WSP "*" *WSP reference

Only one traced reference per line is supported. Any optional text after
the reference is ignored if it is separated by at least one whitespace
character</description><rationale>Defining a link should be as natural and simple as possible in Markdown.
It must also be rendered correctly by a regular Markdown renderer
without modifications. Embedding links in lists to define the
relationship looks nice and is language independent.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.needs-coverage-list-compact</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>748</sourceline><description>The Markdown Importer supports the following compact format for defining
the list of artifact types that are needed to fully cover the current
specification item.

needs-list = needs-header 1*(LINEBREAK depends-line)

needs-header = "Needs:" *WSP

needs-line = *WSP "*" *WSP reference</description><rationale>This alternative style of the ``needs'' list provides backward
compatibility to Elektrobit’s legacy requirement enhanced Markdown
format.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:markdown-standard-syntax</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.artifact-forwarding-notation</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>776</sourceline><description>The Markdown Importer supports forwarding required coverage from one
artifact type to one or more different artifact types using the
following notation.

artifact-need-redirection = skipped-artifact-type *WSP "--&amp;gt;" *WSP target-artifact-list
    *WSP ":" *WSP original-requirement-id

skipped-artifact-type = artifact-type

target-artifact-list = artifact-type *("," *WSP artifact-type)

original-requirement-id = requirement-id

The following example shows an architectural specification item that
forwards the needed coverage directly to the detailed design and an
integration test.

arch --&amp;gt; dsn, itest : req~skip-this-requirement~1</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:artifact-type-forwarding-in-markdown</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.needs-coverage-list</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>811</sourceline><description>The Markdown Importer supports the following format for defining the
list of artifact types that are needed to fully cover the current
specification item.

needs-list = "Needs:" *WSP reference *("," *WSP reference)</description><rationale>Unlike the the references to other requirements, tags are usually very
short, so it is visually beneficial to use a compact style with a comma
separated list in a single line.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:eb-markdown</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>md.eb-markdown-id</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>835</sourceline><description>Alternatively a Markdown requirement ID can have the following format

requirement-id = *1(type~)type ":" id "," *WSP "v" revision

See dsn~md.specification-item-id-format~2 for definitions of the ABNF
sub-rules referred to here.</description><rationale>This ID format is supported for backwards compatibility with
Elektrobit’s legacy requirement-enhanced Markdown format.</rationale><comment>This format is deprecated. Please use the one specified in
dsn~md.specification-item-id-format~2 for new documents.</comment><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:eb-markdown</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>import.full-coverage-tag</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>866</sourceline><description>OFT imports coverage tags in the full tag format:

full-tag = "[" *WSP reference "-&amp;gt;" requirement-id "]"</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:import.full-coverage-tag-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>import.short-coverage-tag</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>882</sourceline><description>OFT imports coverage tags in the short tag format:

short-tag = "[" "[" *WSP reference ":" *revision "]" "]"

During import of short tags OFT requires the following configuration:</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:import.short-coverage-tag-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.command-selection</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>908</sourceline><description>The CLI expects one of the following commands as first unnamed command
line parameter:

command = "trace" / "convert"</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.tracing.command</linksto><dstversion>1</dstversion></provcov><provcov><linksto>req:cli.conversion.command</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.input-file-selection</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>928</sourceline><description>The CLI accepts the following two variants for defining input files:

In both cases relative and absolute paths are accepted. ``Relative''
means in relation to the current working directory.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.input-selection</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>input-directory-recursive-traversal</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>946</sourceline><description>The Importer reads all requirement input files from all input
directories recursively.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.input-directory-selection</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.default-input</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>959</sourceline><description>If the user does not specify any inputs as CLI parameters, the CLI uses
the current working directory as default input.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.default-input</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>newline-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>972</sourceline><description>The CLI accepts one of the following newline formats:

new-line-format = "unix" / "windows"</description><rationale>When users work together in teams where the team members use different
platforms, configuring the newline helps the team to set a common
standard.</rationale><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.newline-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.default-newline-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>994</sourceline><description>If the user does not specify the newline format as parameter, the
exporter uses the native newline format of the platform OFT is executed
on.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.default-newline-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.tracing.output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1010</sourceline><description>The CLI accepts one of the following requirement tracing report formats
as parameter:

report-formats = "plain"</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.tracing.output-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.tracing.default-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1027</sourceline><description>The CLI uses plain text as requirement tracing report format if none is
given as a parameter.</description><needscoverage><needsobj>impl</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.tracing.default-output-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.tracing.exit-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1040</sourceline><description>The return value of the OFT executable is:</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.tracing.exit-status</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.conversion.output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1057</sourceline><description>The CLI accepts one of the following export formats as parameter:

export-formats = "reqm2"</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.conversion.output-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>cli.conversion.default-output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1073</sourceline><description>The CLI uses ReqM2 as export format if none is given as a parameter.</description><needscoverage><needsobj>impl</needsobj><needsobj>itest</needsobj><needsobj>utest</needsobj></needscoverage><providescoverage><provcov><linksto>req:cli.conversion.default-output-format</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject><specobject><id>reflection-based-cli</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\design.adoc</sourcefile><sourceline>1087</sourceline><description>OFT got its own simple command line interpreter that uses reflection to
feed the command line arguments to a receiver object.</description><rationale>One of the design goal of OFT is that it works without external runtime
dependencies except for the Java Standard API. So taking an existing CLI
was no option. Using reflection allows the CLI user to implement the
receiver as a POJO. No annotations are necessary.</rationale><providescoverage><provcov><linksto>req:cli.tracing.command</linksto><dstversion>1</dstversion></provcov><provcov><linksto>req:cli.conversion.command</linksto><dstversion>1</dstversion></provcov></providescoverage></specobject></specobjects></specdocument>