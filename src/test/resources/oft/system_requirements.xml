<?xml version="1.0" encoding="UTF-8"?><specdocument><specobjects doctype="feat"><specobject><id>requirement-tracing</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>88</sourceline><description>OFT traces requirements from specification to any kind of coverage
(document, implementation, test, etc.).</description><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>markdown-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>97</sourceline><description>OFT imports specification items from Markdown files.</description><rationale>Markdown is a clean an simple format that:

For those reasons Markdown is a suitable candidate for writing
specification that can be read and maintained over a long time.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>reqm2-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>117</sourceline><description>OFT imports specification items from ReqM2 files.</description><rationale>One of the OpenFastTrace design goals is to provide a Java-based drop-in
replacement for ReqM2, so file format compatibility is essential.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>coverage-tag-import</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>130</sourceline><description>OFT imports coverage tags from source code files.</description><rationale>Coverage tags indicate parts of the source code that implements a
certain requirement.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>reqm2-export</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>143</sourceline><description>OFT exports specification items to ReqM2 files.</description><rationale>One of the OpenFastTrace design goals is to provide a Java-based drop-in
replacement for ReqM2, so file format compatibility is essential.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>plain-text-report</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>162</sourceline><description>OFT produces a tracing report in plain text.</description><rationale>This can be read directly as console output or with any text editor.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>html-report</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>174</sourceline><description>OFT produces a tracing report in Hypertext markup language (HTML).</description><rationale>This report type is more optically appealing than the plain text report
and still widely supported on all platforms.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject><specobject><id>command-line-interface</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>189</sourceline><description>OFT offers a command line interface.</description><rationale>Running traces automatically in a scripted environment is the most
important use case.</rationale><needscoverage><needsobj>req</needsobj></needscoverage></specobject></specobjects><specobjects doctype="req"><specobject><id>specification-item</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>206</sourceline><description>A specification item consists of the following parts:

The ID is a unique key through which the specification item can be
referenced. It also contains the specification item type and revision
number.

The title is a short summary of the specification item, mostly intended
to appear in overview lists.

The status of the item is one of approved'', proposed'', draft''
and rejected''.

The description contains the normative part of the specification.

The rationale explains the reasoning behind a requirement or decision.

The ``Covers'' section contains a list of all specification item IDs
that are covered by this item.

The ``Depends'' section contains a list of all specification item IDs
that must be implemented in order for this item to be complete.

The ``Needs'' section list all artifact item types in which coverage for
this item must be provided.

Tags are a way to label an artifact intended for grouping.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>forwarding_needed_coverage</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>250</sourceline><description>OFT allows users to forward needed coverage from one artifact type to
one or more different types.</description><rationale>Often a system requirement does not affect the high-level architecture.
In this case it is convenient for the architect to hand it down to lower
levels directly.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>markdown-standard-syntax</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>294</sourceline><description>The OFT Markdown specification artifact format uses the standard
markdown syntax without proprietary extensions.</description><rationale>The specification documents that the OFT Markdown importer reads must be
viewable with any regular Markdown reader and as plain text.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>markdown-outline-readable</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>312</sourceline><description>The Markdown outline – a table of contents created from the heading
structure by various Markdown editors – must be human readable.</description><rationale>In long specification document the outline is the primary means of
navigating the document. Only if the outline can be read easily, it is
useful for authoring specification documents.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>eb-markdown</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>331</sourceline><description>In addition to OFT’s requirement-enhanced markdown syntax OFT also
supports Elektrobit’s variant.</description><rationale>This allows stepwise migration to the OFT standard format. The
Elektrobit format is a little bit closer to ReqM2.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>artifact-type-forwarding-in-markdown</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>349</sourceline><description>The Markdown format features a compact way to forward a requirement from
the artifact type that was originally required to one or more different
artifact types.</description><rationale>Often a system requirement does not affect the high-level architecture.
In this case it is convenient for the architect to hand it down to lower
levels directly.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>import.full-coverage-tag-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>374</sourceline><description>OFT imports coverage tags from source files in a full format that
contains all necessary information for tracing.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>import.short-coverage-tag-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>387</sourceline><description>OFT imports coverage tags from source files in a short format that
requires additional configuration during import.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.outgoing-coverage-link-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>402</sourceline><description>Outgoing coverage link means links that originate from a specification
item and end at another specification item. OFT determines the status of
an outgoing coverage link of a specification item.

The possible results are:</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.incoming-coverage-link-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>429</sourceline><description>Incoming coverage link means links that end at a specification item
and originate at another specification item OFT determines the incoming
coverage link status of a requirement.

The possible results are:</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.deep-coverage</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>454</sourceline><description>OFT marks a specification item as covered deeply if this item - and
all items it needs coverage from - are covered recursively.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.duplicate-items</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>467</sourceline><description>OFT marks a specification item as duplicate if other items with the
same ID exist.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.defect-items</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>480</sourceline><description>OFT marks a specification item as defect if the following criteria
apply</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>tracing.link-cycle</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>500</sourceline><description>OFT detects if specification items are linked in a cycle.</description><rationale>Link cycles are never intended and hard to find by hand in
large collections of requirements.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>include-only-artifact-types</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>545</sourceline><description>OFT gives users the option to include only a configurable set of
artifact types during processing.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>include-items-where-at-least-on-tag-matches</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>558</sourceline><description>OFT gives users the option to include only specification items that have
at least one tag from a configurable set of tags during processing.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>include-items-that-do-not-have-tags-or-where-at-least-one-tag-matches</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>571</sourceline><description>OFT gives users the option to include only specification items that
either do not have tags or have at least one tag from a configurable set
of tags during processing.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>reporting.requirement-origin</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>592</sourceline><description>Users can choose to display the requirement origin (e.g. file and line
number) in reports:</description><rationale>This is especially useful for debugging since it makes finding broken
sources faster.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>reporting.plain-text.summary</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>624</sourceline><description>The summary in the plain text report includes:</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>reporting.plain-text.specification-item-overview</id><status>approved</status><version>2</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>640</sourceline><description>An item summary consist in the plain text report includes</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>reporting.plain-text.link-details</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>663</sourceline><description>The link detail section shows for all links of a specification item:</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>reporting.html.single_file</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>682</sourceline><description>OFT creates the HTML Report as a single file.</description><rationale>It makes exchanging reports with other people easier if everything is
contained in a single file.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>conversion.reqm2-export</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>708</sourceline><description>OFT exports to ReqM2’s ``SpecObject'' format.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.tracing.command</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>724</sourceline><description>OFT allows requirement tracing via the command line.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.tracing.output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>737</sourceline><description>Users can select one of the following requirement tracing output formats
(aka. ``report formats''):</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.tracing.default-output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>753</sourceline><description>OFT uses plain text as requirement tracing output format if the user
does not select one.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.tracing.exit-status</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>767</sourceline><description>The return value of the OFT executable reflects the overall tracing
result.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.conversion.command</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>782</sourceline><description>OFT allows requirement tracing via the command line.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.conversion.output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>795</sourceline><description>Users can select one of the following conversion output formats (aka.
``export formats''):</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.conversion.default-output-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>811</sourceline><description>OFT uses ReqM2 as default conversion format if the user does not select
one.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.input-selection</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>827</sourceline><description>Users can select requirement sources as combinations of files and
directories.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.input-directory-selection</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>841</sourceline><description>Users can select zero or more directories below which files and
sub-directories are imported recursively.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.default-input</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>856</sourceline><description>If users select neither files nor directories for input, OFT imports
from the current working directory recursively.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.newline-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>871</sourceline><description>Users can choose between Unix-style and Windows-style newline encoding
for outputs.</description><rationale>When users work together in teams where the team members use different
platforms, configuring the newline helps the team to set a common
standard.</rationale><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject><specobject><id>cli.default-newline-format</id><status>approved</status><version>1</version><sourcefile>C:\dev\adocspec\src\test\resources\oft\system_requirements.adoc</sourcefile><sourceline>892</sourceline><description>Unless selected by the user, OFT uses the native newline format of the
platform it runs on for outputs.</description><needscoverage><needsobj>dsn</needsobj></needscoverage></specobject></specobjects></specdocument>